AC_PREREQ([2.61])
AC_INIT([dlvhex-wordnetplugin],[2.0.0],[dlvhex-devel@lists.sourceforge.net])
AC_CONFIG_SRCDIR([src/WordnetPlugin.cpp])
AC_CONFIG_HEADERS([include/config.h])

# for documentation of the versioning scheme see
# https://sourceforge.net/apps/trac/dlvhex/wiki/LibraryVersions
DLVHEX_DEFINE_VERSION([WORDNETPLUGIN],[$PACKAGE_VERSION])
DLVHEX_DEFINE_VERSION([DLVHEX_ABI],[7.0.0])

AM_INIT_AUTOMAKE

AC_CANONICAL_HOST

# by default we look into /opt/local and /sw for include files (macports vs. fink)
case $host_os in
     darwin*|macosx*)
	CPPFLAGS="$CPPFLAGS -I/opt/local/include -I/sw/include"
     ;;
esac 


# Checks for programs.
AC_PROG_CXX
AC_LANG([C++])

# Checks for header files.
AC_HEADER_DIRENT
AC_CHECK_HEADERS([time.h])
AC_CHECK_HEADERS([sys/param.h])

# Debugging option
AC_ARG_ENABLE(debug,
              [  --enable-debug          enable debugging output],
	      [AC_DEFINE(DEBUG,[],[enable debugging output])]
	     )	      

# Profiling option
AC_ARG_ENABLE(profile,
              [  --enable-profile        enable performance analysis],
	      [AC_DEFINE(PROFILE,[],[enable performance anlysis])]
	     )

#
# running configure --with-wordnet will take wordnetdir.
#

# running configure without --with-wordnetdir will assume WordNet in this directory
ASSUMED_WN_BASE="/usr/local/WordNet-3.0"

AC_ARG_WITH(wordnet,
           [  --with-wordnet          Base directory of WordNet], 
           [AC_SUBST([DISTCHECK_CONFIGURE_FLAGS],["$DISTCHECK_CONFIGURE_FLAGS --with-wordnet=${withval}"])
            wordnetdir=$withval],
           [wordnetdir=$ASSUMED_WN_BASE]
           )

AC_SUBST([wordnetdir])

# Look for WordNet header and library in additional directories
CPPFLAGS="$CPPFLAGS -I$wordnetdir/include"
LDFLAGS="$LDFLAGS -L$wordnetdir/lib"

AC_CHECK_HEADERS(wn.h,
                 [],
		 AC_MSG_ERROR([WordNet header not found. \
Check your WordNet installation \
or use --with-wordnet to \
specify the WordNet base directory.]))

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST

# libtool
LT_INIT([dlopen])

# Checks for libtool's libltdl
LT_CONFIG_LTDL_DIR([libltdl])
LTDL_INIT([installable])
#AC_SUBST(INCLTDL)
#AC_SUBST(LIBLTDL)

# configure autogenerated libltdl directory
# AC_CONFIG_SUBDIRS([libltdl])
# fix for some versions of autoconf/libtool, see also https://gnunet.org/mantis/view.php?id=1340
m4_ifdef([_AC_SEEN_TAG(libltdl)], [], [AC_CONFIG_SUBDIRS([libltdl])])

AC_DISABLE_STATIC # we don't need a static library

# check for the WordNet wn library
AC_CHECK_LIB([WN], 
             wninit, 
             [],
	     [AC_CHECK_LIB([wordnet], 
             wninit, 
             [],
	     [AC_MSG_ERROR([WordNet library not found. \
Check your WordNet installation \
or use --with-wordnet to specify \
the WordNet base directory.])])
	     ]
)

# check for dlvhex, sets various variables
DLVHEX_REQUIRE([2.0.0])

# checking for boost libs
BOOST_REQUIRE([1.41.0])
BOOST_SMART_PTR
BOOST_STRING_ALGO
BOOST_TOKENIZER

# where the plugin will be installed by default.
# running configure will take sysplugindir from dlvhex.pc,
# running configure --enable-userinstall will take homeplugindir.
AC_ARG_ENABLE(userinstall, 
             [  --enable-userinstall    Install plugin into home directory],
             [plugindir=$HOME/$DLVHEX_USERPLUGINDIR],
             [plugindir=$DLVHEX_SYSPLUGINDIR]
             )
AC_SUBST([plugindir])
if test "x$plugindir" == "x"; then
	AC_MSG_ERROR([Cannot determine nonempty value for plugindir!])
fi

# all needed makefiles
AC_CONFIG_FILES([
           Makefile
           src/Makefile
           include/Makefile
           examples/Makefile
])

AC_OUTPUT

dnl output configuration
cat <<EOF
 
$PACKAGE_TARNAME $PACKAGE_VERSION configuration:

 - Compiler settings
 CC: $CC
 CXX: $CXX
 CFLAGS: $CFLAGS
 CPPFLAGS: $CPPFLAGS
 CXXFLAGS: $CXXFLAGS
 LDFLAGS: $LDFLAGS

 - from pkg-config
 DLVHEX_CFLAGS: $DLVHEX_CFLAGS
 DLVHEX_LIBS: $DLVHEX_LIBS
 DLVHEX_BINDIR: $DLVHEX_BINDIR
 
 - Path settings
 prefix: $prefix
 plugindir: $plugindir
 wordnetdir: $wordnetdir
EOF
